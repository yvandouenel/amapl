<?php
/**
 * @file
 * Code for the Feature form amapl feature.
 */

include_once 'feature_form_amapl.features.inc';
/**
 * Implements hook_entityform_confirm_page_alter().
 * PL et CAA managed
 */
function feature_form_amapl_entityform_confirm_page_alter(&$render_array, $entityform_type, $entityform_id) {
  //dpm("dans feature_form_amapl_entityform_confirm_page_alter");

  // Récupération d'un table d'entité avec une seule valeur : attention, on voit que le deuxième argument est un tableau
  $entity_array = entity_load('entityform', array($entityform_id));

  // Récupération de l'entité
  $entity = $entity_array[$entityform_id];

  /** Cas communs aux PL et aux CAA ***********************************************************/
  $denomination = (isset($entity->field_nom_prenom['und'][0]['value']) ?
  $entity->field_nom_prenom['und'][0]['value'] : $entity->field_ou_denomination_sociale['und'][0]['value']);

  /** Cas spécifiques aux CAA ***********************************************************/
  if(isset($entity->field_date_du['und'][0]['value'])) {
    // Modification du champ description de paiement de l'entité
    $entity->field_paiement_caa['und'][0]['description'] =
      '<a href="/entityform/' . $entityform_id . '">Adhesion AMAPL n°' . $entityform_id . '</a>' .
      ' pour ' . $denomination . ' - ' . $entity->field_email['und'][0]['email'];

    // Modification du champ nom du paiement de l'entité
    $entity->field_paiement_caa['und'][0]['name'] = $entityform_id;
  }

  /** Cas spécifiques aux PL ***********************************************************/
  else {
    // Modification du champ description de paiement de l'entité
    $entity->field_paiement['und'][0]['description'] =
      '<a href="/entityform/' . $entityform_id . '">Adhesion AMAPL n°' . $entityform_id . '</a>' .
      ' pour ' . $denomination . ' - ' . $entity->field_email['und'][0]['email'];

    // Modification du champ nom du paiement de l'entité
    $entity->field_paiement['und'][0]['name'] = $entityform_id;
  }

  // Enregistrement de l'entité
  $entity->save();
  $_SESSION["entity_form_id"] = $entityform_id;
  drupal_goto("entityform/" . $entityform_id);
}

/**
 * Implements hook_form_alter().
 * PL et CAA managed
 */
function feature_form_amapl_form_alter(&$form, &$form_state, $form_id) {
  /* PL  *******************************************************************************/
  if ($form_id == 'inscription_amapl_entityform_edit_form') {
    // Si le champ de paiement n'est pas encore initialisé, il faut initialiser
    $session_id = str_replace('-', '', strtolower(session_id()));

    if (empty($form['field_paiement']['und']['line_item']['#default_value'])) {

      // les valeurs par défaut du champ de payment sont modifiées
      $form['field_paiement']['und']['line_item']['#default_value'][0] = new stdClass();

      // Valeurs par défaut pour les champs de paiement
      $form['field_paiement']['und']['line_item']['#default_value'][0]->tax_rate = 0.2;
      $form['field_paiement']['und']['line_item']['#default_value'][0]->quantity = 1;
      $form['field_paiement']['und']['line_item']['#default_value'][0]->amount = 0;
      $form['field_paiement']['und']['line_item']['#default_value'][0]->name = 0;
      $form['field_paiement']['und']['line_item']['#default_value'][0]->description = $session_id;
      $form['field_paiement']['und']['line_item']['#default_value'][0]->name = $session_id;
    }

    // appel du js
    drupal_add_js(drupal_get_path('module', 'feature_form_amapl') . '/js/feature_form_amapl.js');

    // appel de la fonction chargée de vérifier les données entrées par l'utilisateur
    $form['#validate'][] = 'feature_form_amapl_form_validate';
  }

  /* CAA  ********************************************************************************/
  if ($form_id == 'inscription_amapl_caa_entityform_edit_form') {
    // Si le champ de paiement n'est pas encore initialisé, il faut initialiser
    $session_id = str_replace('-', '', strtolower(session_id()));
    if (empty($form['field_paiement_caa']['und']['line_item']['#default_value'])) {
      // les valeurs par défaut du champ de payment sont modifiées
      $form['field_paiement_caa']['und']['line_item']['#default_value'][0] = new stdClass();
      // Valeurs par défaut pour les champs de paiement
      $form['field_paiement_caa']['und']['line_item']['#default_value'][0]->tax_rate = 0.2;
      $form['field_paiement_caa']['und']['line_item']['#default_value'][0]->quantity = 1;
      $form['field_paiement_caa']['und']['line_item']['#default_value'][0]->amount = 0;
      $form['field_paiement_caa']['und']['line_item']['#default_value'][0]->name = 0;
      $form['field_paiement_caa']['und']['line_item']['#default_value'][0]->description = $session_id;
      $form['field_paiement_caa']['und']['line_item']['#default_value'][0]->name = $session_id;
    }

    // appel du js
    drupal_add_js(drupal_get_path('module', 'feature_form_amapl') . '/js/feature_form_amapl_caa.js');

    // appel de la fonction chargée de vérifier les données entrées par l'utilisateur
    $form['#validate'][] = 'feature_form_amapl_caa_form_validate';
  }
}

/*
 * Vérification des données entrées par l'utilisateur - Cas des CAA
 */
function feature_form_amapl_caa_form_validate($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'feature_form_amapl') . '/js/feature_form_amapl_caa.js');
  $price = 0;

  // Micro-BIC/BA
  $micro_bic_ba = ($form_state['values']['field_regime_declaratif']['und'][0]['value'] == 'Micro') ?
  true : false;

  // Entreprise individuelle
  $entreprise_individuelle = ($form_state['values']['field_forme_juridique_caa']['und'][0]['value'] == 'EI') ?
  true : false;

  // premiere adhésion
  $first_membership = ($form_state['values']['field_type_adhesion_caa']['und'][0]['value'] == 'Première adhésion à un CGA ou à un OMGA') ?
  true : false;

  /**
   * Règle de gestion : si date actuelle > 31 mai, la date de débyt doit être supérieure ou égale au
   * 01/01/de l’année en cours
   * sinon, la première date doit être supérieure ou égale au 01/01/ de l’année n-1.
   */
  $today = date("Y-m-d H:i:s");
  $this_year = date("Y");
  $first_january = date($this_year . "-01-01 00:00:00");
  $first_january_last_year = date(($this_year - 1) . "-01-01 00:00:00");
  $thirty_one_may = date($this_year . "-05-31 23:59:59");

  $begin_fiscal_year = substr($form_state['values']['field_date_du']['und'][0]['value'], 0, 4);
  $end_fiscal_year = substr($form_state['values']['field_date_au']['und'][0]['value'], 0, 4);
  $begin_activity_year = substr($form_state['values']['field_date_debut']['und'][0]['value'], 0, 4);

  if($form_state['values']['field_date_du']['und'][0]['value'] >
    $form_state['values']['field_date_au']['und'][0]['value']) {
      form_set_error('field_date_du', t("Vous devez entrer date de début d'exercice comptable inférieure à la date de fin."));
  }
  else if($today > $thirty_one_may &
    $form_state['values']['field_date_du']['und'][0]['value'] < $first_january) {
    form_set_error('field_date_du', t("Vous devez entrer une date de début d'exercice comptable supérieure au 1er janvier de l'année en cours."));
  }
  else if($today < $thirty_one_may &
    $form_state['values']['field_date_du']['und'][0]['value'] < $first_january_last_year) {
    form_set_error('field_date_du', t("Vous devez entrer une date de début d'exercice comptable supérieure au 1er janvier de l'année passée."));
  }
  /** nom et prénon ou dénomination sociale **********************************/
  if ($form_state['values']['field_nom_prenom']['und'][0]['value'] == '' && $form_state['values']['field_ou_denomination_sociale']['und'][0]['value'] == '') {
    form_set_error('field_nom_prenom', t("Vous devez entrer un nom et un prénom"));
    form_set_error('field_ou_denomination_sociale', t('... ou renseigner le champ "Dénomination sociale".'));
  }

  /** Définition du prix *****************************************************/
  if ($micro_bic_ba ) {
    $price = '99';
  }
  else if ($begin_fiscal_year == $this_year &&
    $begin_activity_year == $this_year &&
    $entreprise_individuelle &&
    $first_membership) {
      $price = '99';
  }
  else {
    $price = '247';
  }

  $form_state['values']['field_prix']['und'][0]['value'] = round($price * 1.2);
  $form_state['values']['field_paiement']['und'][0]['amount'] = $price;
}

/*
 * Vérification des données entrées par l'utilisateur - Cas des PL
 */
function feature_form_amapl_form_validate($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'feature_form_amapl') . '/js/feature_form_amapl.js');
  $price = 0;
  $current_year = date("Y");
  $begin_activity_year = substr($form_state['values']['field_date_debut']['und'][0]['value'], 0, 4);
  $year_income = $form_state['values']['field_pour_les_revenus']['und'][0]['value'];

  // forme juridique
  if ($form_state['values']['field_fj_autre']['und'][0]['value'] == '' && $form_state['values']['field_forme_juridique']['und'][0]['value'] == 'AUTRE') {
    form_set_error('field_forme_juridique', t("Vous devez entrer une forme juridique"));
    form_set_error('field_fj_autre', t('... ou renseigner le champ "Autre".'));
  }
  // Dénomination
  if ($form_state['values']['field_nom_prenom']['und'][0]['value'] == '' && $form_state['values']['field_ou_denomination_sociale']['und'][0]['value'] == '') {
    form_set_error('field_nom_prenom', t("Vous devez entrer un nom et un prénom"));
    form_set_error('field_ou_denomination_sociale', t('... ou renseigner le champ "Dénomination sociale".'));
  }
  // Prix **********************************************************************
  // Micro BNC ou première adhésion avec une création d'activité en 2017
  if (
    $form_state['values']['field_micro_autoentrepreneur']['und'][0]['value'] ||
    ((
        $form_state['values']['field_forme_juridique']['und'][0]['value'] == "EI" &&
        $year_income == 2017 && $begin_activity_year == 2017 &&
        $form_state['values']['field_type_adhesion']['und'][0]['value'] == "Première adhésion à une association agréée")
      ||
      (
        $form_state['values']['field_forme_juridique']['und'][0]['value'] == "EI" &&
        $year_income == 2018 && $begin_activity_year == 2018 &&
        $form_state['values']['field_type_adhesion']['und'][0]['value'] == "Première adhésion à une association agréée")
      ||
      (
        $form_state['values']['field_forme_juridique']['und'][0]['value'] == "EI" &&
        $year_income == 2019 && $begin_activity_year == 2019 &&
        $form_state['values']['field_type_adhesion']['und'][0]['value'] == "Première adhésion à une association agréée")
    )
  ) {
    if ($year_income == 2017) {
      $price = '82.5';//'80.833333333'
    }
    else {
      if ($year_income == 2018 || $year_income == 2019 ) {
        $price = '82.5';
      }
    }
  }

  // Micro entrepreneur autoentrepreneur
  elseif ($form_state['values']['field_micro_autoentrepreneur']['und'][0]['value']) {
    if ($year_income == 2017) {
      $price = '82.5';//'80.833333333'
    }
    else {
      if ($year_income == 2018 || $year_income == 2019 ) {
        $price = '82.5';
      }
    }
  }
  // Entreprise unipersonnelle
  elseif (
    $form_state['values']['field_forme_juridique']['und'][0]['value'] == "EI" ||
    $form_state['values']['field_forme_juridique']['und'][0]['value'] == "EURL" ||
    $form_state['values']['field_forme_juridique']['und'][0]['value'] == "SELARL"
  ) {
    if ($year_income == 2017) {
      $price = '165';//162.5
    }
    else {
      if ($year_income == 2018 || $year_income == 2019 ) {
        $price = '165';
      }
    }
  }
  // Entreprise avec des associés (plus de 2 si "autre"
  elseif (
    $form_state['values']['field_forme_juridique']['und'][0]['value'] == "SCP" ||
    $form_state['values']['field_forme_juridique']['und'][0]['value'] == "SEP" ||
    $form_state['values']['field_forme_juridique']['und'][0]['value'] == "SDF" ||
    ($form_state['values']['field_forme_juridique']['und'][0]['value'] == "AUTRE" &&
      $form_state['values']['field_nombre_associes']['und'][0]['value'] > 2)

  ) {
    if ($year_income == 2017) {
      $price = '265';//260
    }
    else {
      if ($year_income == 2018 || $year_income == 2019 ) {
        $price = '265';
      }
    }
  }
  else {
    if ($year_income == 2017) {
      $price = '165';//162.5
    }
    else {
      if ($year_income == 2018 || $year_income == 2019 ) {
        $price = '165';
      }
    }
  }

  $form_state['values']['field_prix']['und'][0]['value'] = round($price * 1.2);
  $form_state['values']['field_paiement']['und'][0]['amount'] = $price;

}

/**
 * Implements hook_entity_view().
 */
function feature_form_amapl_entity_view($entity, $type, $view_mode, $langcode) {
  if ($type == "entityform") {
    global $user;
    drupal_add_js(drupal_get_path('module', 'feature_form_amapl') . '/js/feature_view_form_amapl.js');
    // test if anonymous user has the good entityform id. If not: redirection to session-over
    if (!in_array('webmaster', $user->roles) && !in_array('administrator', $user->roles)) {
      if (isset($_SESSION['entity_form_id'])) {
        if ($_SESSION['entity_form_id'] != $entity->entityform_id) {
          drupal_goto('payment/session-over');
        }
      }
      else {
        // Pas de paiement dans la session
        drupal_goto('payment/session-over');
      }
    }
  }
  if ($type == "payment") {

    global $user;
    $path = current_path(); // payment/32/view
    $pattern = '/payment\/[0-9]*\/view/';

    if (preg_match($pattern, $path)) {
      // Je suis  sur un chemin de type payment/yy/view
      // Check if the user has the 'webmaster or administrator' role.
      if (!in_array('webmaster', $user->roles) && !in_array('administrator', $user->roles)) {
        if (isset($_SESSION['paypal_payment_pps_pid'])) {

          if ($entity->pid != $_SESSION['paypal_payment_pps_pid']) {
            drupal_goto('payment/session-over');
          }
        }
        else {
          // Pas de paiement dans la session
          drupal_goto('payment/session-over');
        }
      }
    }

  }

}

/**
 * Implements hook_entity_load().
 */
function feature_form_amapl_entity_load($entities, $type) {

}

/**
 * Change historical payment
 */
function changeHistoricalPayment(Payment $payment) {
  $payment_for_entityform_number = array_keys($payment->line_items);

  // charger les entityforms qui correspondent à ces numéros
  foreach ($payment_for_entityform_number as $value) {
    $is_int = is_int($value) ? TRUE : FALSE;
    if ($is_int) {

      // Récupération de tous paiements correspondants à cet entityform pour écrire l'historique
      $entity_payment_array = entity_load('payment');
      $historique = "";
      $statuts = "";
      foreach ($entity_payment_array as $paiement) {
        $numbers = array_keys($paiement->line_items);
        foreach ($numbers as $number) {
          if ($number == $value) {
            // Si je traite le paiement qui vient de changer de statut, je récupère ce dernier
            if ($paiement->pid == $payment->pid) {
              $paiement = $payment;
            }

            $statut = ($paiement->getStatus()->status != 'payment_status_success') ? 'Non finalisé' : "Finalisé";
            $historique =
              $historique .
              '<li>' .
              date('d/m/Y - G:i', $paiement->getStatus()->created) .
              ' - Statut : <strong>' .
              $statut .
              '</strong>' .
              ' - n° de paiement : ' .
              $paiement->pid .
              ' - ' .
              $paiement->line_items[$number]->description .
              '</li>';
          }
        }
      }

      // Récupération d'un tableau d'entités qui correspondent à ce paiement (normalement une seule)
      $entity_array = entity_load('entityform', array($value));
      foreach ($entity_array as $entity) {
        // Modification du champ historique de paiement de l'entité
        if (isset($historique) && $historique != '') {
          //$wrapper = entity_metadata_wrapper('entityform', $entity); // use wrappers!

          $entity->field_historique_paiement['und'][0]['format'] = "full_html";
          $entity->field_historique_paiement['und'][0]['value'] =
            '<h3>Historique de paiement </h3>' .
            '<ul>' .
            $historique .
            '</ul>';
          $entity->save();
        }
        return $entity;
      }

    }
  }
}

/**
 * Implements hook_paypal_payment_pps_data().
 */
function feature_form_amapl_paypal_payment_pps_data(Payment $payment, array &$data) {
  changeHistoricalPayment($payment);
}

/**
 * Implements hook_payment_status_change().
 */
function feature_form_amapl_payment_status_change(Payment $payment, PaymentStatusItem $previous_status_item) {
  // dpm($payment->getStatus()->status);
  // Changement historique et récupération de l'entityform concernée *********
  $entity = changeHistoricalPayment($payment);
  if ($payment->getStatus()->status == "payment_status_new") {
    global $user;
    // supression en base de données de l'enregistrement session_api_session si c'est un anonyme
    if ($user->uid == 0) {
      $sid = session_api_get_sid(TRUE);
      db_delete('session_api')
        ->condition('sid', $sid)
        ->execute();
    }
  }

  if ($payment->getStatus()->status == "payment_status_success") {

    if ($entity) {
      $form_info = get_form_infos($entity);
      $info_form_subscribe = $form_info[0];
      $benefice = $form_info[1];

      // Sends email to contact@amapl.com ****************************************
      $description_payment = current($payment->getLineItems())->description;
      $mail_to = "adhesions@amapl.com,y.douenel@coopernet.fr";

      $full_name = "contact AMAPL";

      // Build email message
      $to = $mail_to;
      $from = "adhesions@amapl.com";
      $mail_subject = 'Inscription AMAPL (' . $benefice . ') payée en ligne';
      $payment_date = date('d-m-y G:i:s');
      // Historique du paiement
      $payment_history = '';
      if (!empty($entity->field_historique_paiement)) {
        $payment_history = '<p>' . $entity->field_historique_paiement['und'][0]['value'] . '</p>';
      }
      $mail_body =
        "<p>Inscription payée en ligne sur le site de l'AMAPL</p>" .
        $description_payment .
        $payment_history .
        $info_form_subscribe;

      // envoie aux administrateurs
      $params = array('subject' => $mail_subject, 'body' => $mail_body);
      $type = 'status';
      if (drupal_mail('feature_form_amapl', 'form_amapl_paid', $to, language_default(), $params, $from)) {
        $message = t('Validation request email message sent successfully to %fullname (%to)', array(
          '%fullname' => $full_name,
          '%to' => $to
        ));
      }
      else {
        $message = t('Email message could not be sent to %fullname (%to)', array(
          '%fullname' => $full_name,
          '%to' => $to
        ));
        $type = 'warning';
      }
      // envoie aux administrateurs
      drupal_set_message($message, $type);

      // envoie au nouvel adhérent
      if (!empty($entity->field_email) && $entity->field_email['und'][0]['email']) {
        $mail_to = $entity->field_email['und'][0]['email'];
        $to = $mail_to;
        $mail_body =
          "<p>Madame, Monsieur,<br>Votre demande d’adhésion et le paiement des sommes indiquées ci-après ont bien été enregistrés et envoyés à l’AMAPL. <br>Une confirmation d’adhésion vous sera adressée prochainement par l’association, après vérification du respect des délais d’adhésion en vigueur.<br>Un remboursement du règlement pourra avoir lieu en cas de rejet de l’adhésion pour ce motif.<br>Sincères salutations.<br>L’équipe AMAPL</p>" .
          $info_form_subscribe;
        $params = array('subject' => $mail_subject, 'body' => $mail_body);

        if (drupal_mail('feature_form_amapl', 'form_amapl_paid', $to, language_default(), $params, $from)) {
          $message = t('Validation request email message sent successfully to %fullname (%to)', array(
            '%fullname' => $full_name,
            '%to' => $to
          ));
        }
        else {
          $message = t('Email message could not be sent to %fullname (%to)', array(
            '%fullname' => $full_name,
            '%to' => $to
          ));
          $type = 'warning';
        }
        // envoie au nouvel adhérent
        drupal_set_message($message, $type);
      }
    }
  }
}

function get_form_infos($entity) {
  $benefice = "BNC";
  $msg = '<table border="1" cellpadding="5">';
  // Antenne
  $msg .= '<tr><th>Agence : </th><td>' . $entity->field_choix_antenne['und'][0]['value'] . '</td></tr>';

  // BIC/BA Exercice comptable à prendre en compte
  if (!empty($entity->field_date_du)) {
    $msg .= '<tr><th> Exercice comptable à prendre en compte : </th><td>du ' .
    $entity->field_date_du['und'][0]['value'] . ' au ' .
    $entity->field_date_au['und'][0]['value'] .
    '</td></tr>';
    $benefice = "BIC/BA";
  }
  // BNC Année adhésion
  if (!empty($entity->field_pour_les_revenus)) {
    $msg .= '<tr><th>Demande d\'adhésion pour les revenus :</th><td>' . $entity->field_pour_les_revenus['und'][0]['value'] . '</td></tr>';
  }

  // Forme juridique
  $msg .= '<tr><td colspan="2"><h3>Identification</h3></td></tr>';

  // BNC Forme juridique
  if (!empty($entity->field_forme_juridique)) {
    $msg .= '<tr><th>Forme juridique : </th><td>' . $entity->field_forme_juridique['und'][0]['value'] . '</td></tr>';
  }
  // BIC/BA Forme juridique
  if (!empty($entity->field_forme_juridique_caa)) {
    $msg .= '<tr><th>Forme juridique : </th><td>' . $entity->field_forme_juridique_caa['und'][0]['value'] . '</td></tr>';
  }
  // Autre forme juridique
  if (!empty($entity->field_fj_autre)) {
    $msg .= '<tr><th>Autre forme juridique : </th><td>' . $entity->field_fj_autre['und'][0]['value'] . '</td></tr>';
  }
  // BNC Nombre d'associés
  if (!empty($entity->field_nombre_associes)) {
    $msg .= '<tr><th>Nombre d\'associés : </th><td>' . $entity->field_nombre_associes['und'][0]['value'] . '</td></tr>';
  }

  // Identification
  if (!empty($entity->field_nom_prenom)) {
    $msg .= '<tr><th>Nom et prénom : </th><td>' . $entity->field_nom_prenom['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_email)) {
    $msg .= '<tr><th>Email : </th><td>' . $entity->field_email['und'][0]['email'] . '</td></tr>';
  }
  if (!empty($entity->field_phone)) {
    $msg .= '<tr><th>Téléphone : </th><td>' . $entity->field_phone['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_ou_denomination_sociale)) {
    $msg .= '<tr><th>Dénomination sociale : </th><td>' . $entity->field_ou_denomination_sociale['und'][0]['value'] . '</td></tr>';
  }

  if (!empty($entity->field_adresse_professionnelle)) {
    $msg .= '<tr><th>Adresse professionnelle: </th><td>' . $entity->field_adresse_professionnelle['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_adresse_correspondance)) {
    $msg .= '<tr><th>Adresse correspondance : </th><td>' . $entity->field_adresse_correspondance['und'][0]['value'] . '</td></tr>';
  }

  //Renseignements relatifs à l'activité
  $msg .= '<tr><td colspan="2"><h3>Renseignements relatifs à l\'activité</h3></td></tr>';
  if (!empty($entity->field_nature_activite)) {
    $msg .= '<tr><th>Nature de l\'activité : </th><td>' . $entity->field_nature_activite['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_date_debut)) {
    $msg .= '<tr><th>Date de début de l\'activité : </th><td>' . date("d/m/Y", strtotime($entity->field_date_debut['und'][0]['value'])) . '</td></tr>';
  }
  if (!empty($entity->field_siret)) {
    $msg .= '<tr><th>Numéro de Siret : </th><td>' . $entity->field_siret['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_code_ape)) {
    $msg .= '<tr><th>Code APE : </th><td>' . $entity->field_code_ape['und'][0]['value'] . '</td></tr>';
  }
  // BNC Activité non professionnelle
  if (!empty($entity->field_non_pro) && $entity->field_non_pro['und'][0]['value']) {
    $msg .= '<tr><th>Activité non professionnelle : </th><td>Oui</td></tr>';
  }
  if (!empty($entity->field_source_etrangere) && $entity->field_source_etrangere['und'][0]['value']) {
    $msg .= '<tr><th>Revenus de sources étrangères : </th><td>Oui</td></tr>';
  }
  // BNC - Adhésion Micro-BNC ou Auto-entrepreneur
  if (!empty($entity->field_micro_autoentrepreneur) && $entity->field_micro_autoentrepreneur['und'][0]['value']) {
    $msg .= '<tr><th>Adhésion Micro-BNC ou Auto-entrepreneur  : </th><td>Oui</td></tr>';
  }
  // BNC - Type d\'adhésion
  if (!empty($entity->field_type_adhesion)) {
    $msg .= '<tr><th>Type d\'adhésion : </th><td>' . $entity->field_type_adhesion['und'][0]['value'] . '</td></tr>';
  }
  // BIC/BNC Type d'adhésion
  if (!empty($entity->field_type_adhesion_caa)) {
    $msg .= '<tr><th>Type d\'adhésion : </th><td>' . $entity->field_type_adhesion_caa['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_autre_type_adhesion)) {
    $msg .= '<tr><th>Autre type d\'adhésion :  </th><td>' . $entity->field_autre_type_adhesion['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_activity_details)) {
    $msg .= '<tr><th>Précisions diverses :  </th><td>' . $entity->field_activity_details['und'][0]['value'] . '</td></tr>';
  }
  // BNC - Nom et adresse de la précédente AGA
  if (!empty($entity->field_autre_aga)) {
    $msg .= '<tr><th>Nom et adresse de la précédente AGA : </th><td>' . $entity->field_autre_aga['und'][0]['value'] . '</td></tr>';
  }

  // BIC/BAC Régime fiscal
  if (!empty($entity->field_imposition_benefices)) {
    $msg .= '<tr><td colspan="2"><h3>Régime fiscal</h3></td></tr>';
    $msg .= '<tr><th>Imposition des bénéfices : </th><td>' . $entity->field_imposition_benefices['und'][0]['value'] . '</td></tr>';
    if (!empty($entity->field_regime_declaratif)) {
      $msg .= '<tr><th>Régime déclaratif : </th><td>' . $entity->field_regime_declaratif['und'][0]['value'] . '</td></tr>';
    }
    if (!empty($entity->field_situation_tva)) {
      $msg .= '<tr><th>Situaltion TVA : </th><td>' . $entity->field_situation_tva['und'][0]['value'] . '</td></tr>';
    }
  }

  // Tenue des documents comptables
  $msg .= '<tr><td colspan="2"><h3>Tenue des documents comptables</h3></td></tr>';
  if (!empty($entity->field_assistance)) {
    $msg .= '<tr><th>Assistance d\'un professionnel : </th><td>' . $entity->field_assistance['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_assistance_nom)) {
    $msg .= '<tr><th>Nom et prénom ou société  : </th><td>' . $entity->field_assistance_nom['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_profession)) {
    $msg .= '<tr><th>Profession : </th><td>' . $entity->field_profession['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_assistance_adresse)) {
    $msg .= '<tr><th>Adresse : </th><td>' . $entity->field_assistance_adresse['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_assistance_phone)) {
    $msg .= '<tr><th>Téléphone : </th><td>' . $entity->field_assistance_phone['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_assistance_fax)) {
    $msg .= '<tr><th>Fax : </th><td>' . $entity->field_assistance_fax['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_assistance_email)) {
    $msg .= '<tr><th>Email : </th><td>' . $entity->field_assistance_email['und'][0]['value'] . '</td></tr>';
  }


  // Coût de l'adhésion
  $msg .= '<tr><td colspan="2"><h3>Coût de l\'adhésion</h3></td></tr>';

  // BNC - Coût de l'adhésion
  if (!empty($entity->field_prix)) {
    $msg .= '<tr><th>Coût de l\'adhésion : </th><td>' . $entity->field_prix['und'][0]['value'] . '€</td></tr>';
  }
  // BIC/BA -  Coût de l'adhésion
  if (!empty($entity->field_paiement_caa)) {
    $msg .= '<tr><th>Coût de l\'adhésion : </th><td>' . round($entity->field_paiement_caa['und'][0]['amount'] * 1.2) . '€</td></tr>';
  }
  // Provenance
  if (!empty($entity->field_provenance) || !empty($entity->field_autre_provenance)) {
    $msg .= '<tr><td colspan="2"><h3>Provenance</h3></td></tr>';
  }

  if (!empty($entity->field_provenance)) {
    $msg .= '<tr><th>Provenance : </th><td>' . $entity->field_provenance['und'][0]['value'] . '</td></tr>';
  }
  if (!empty($entity->field_autre_provenance)) {
    $msg .= '<tr><th>Autre provenance : </th><td>' . $entity->field_autre_provenance['und'][0]['value'] . '</td></tr>';
  }

  // Acceptation
  $msg .= '<tr><td colspan="2"><h3>Acceptation</h3></td></tr>';
  if (!empty($entity->field_cgv) && $entity->field_cgv['und'][0]['value']) {
    $msg .= '<tr><th>J’ai pris connaissance et accepte les conditions d’adhésion : </th><td>Oui</td></tr>';
  }
  if (!empty($entity->field_payment_online) && $entity->field_payment_online['und'][0]['value']) {
    $msg .= '<tr><th>Je règle la cotisation en ligne par carte bancaire, condition de mon adhésion en ligne : </th><td>Oui</td></tr>';
  }

  $msg .= '</table>';
  $msg .= "<p>Association de gestion agréée déclarée n° 201300. Loi du 1er juillet 1901. Siret n° 314 686 924 00031. - Agrément fiscal n° 349 AA 4 - 1978. - www.amapl.com</p>";
  $msg .= '<div style="font-size:0.8em;">'.
  '<h2>CONDITIONS GÉNÉRALES D\'ADHÉSION</h2>' .
  '<p><strong>En renseignant un bulletin d\'adhésion, je demande à adhérer à l’association AMAP.L., organisme mixte de gestion agréé, à compter des revenus ou de l’exercice mentionné sur le bulletin, et à l’appui de ma demande :</strong></p>
  <p>M’engage à respecter les Statuts et le Réglement Intérieur de l\'Association, dont je reconnais avoir pris connaissance.</p>
  <p>M’engage à informer l’association de tout changement intervenu concernant mon activité, ma forme juridique, mon identification, mon régime fiscal ou la tenue de mes documents comptables dans le mois qui suit cette modification.</p>
  <p>M’engage à respecter les obligations qui me sont imposées en tant qu’adhérent d’une association exerçant une activité d’organisme mixte de gestion agréé visé par l’article 1649 quater K ter du Code général des impôts, dont je reconnais avoir pris connaissance pour la partie Association agréée visée aux articles 1649 quater F et suivants du Code général des impôts (professions libérales) et/ou pour la partie Centre de gestion agréé visée aux articles 1649 quater C et suivants du Code général des impôts (artisans, commerçants, agriculteurs), notamment&nbsp;:</p>
  <p class="rteindent1">Pour les artisans, commerçants, agriculteurs, produire une comptabilité sincère et complète de l’activité. Pour les professions libérales, se conformer aux recommandations précisées à l’article 371 Y de l’annexe 2 du Code général des impôts, notamment tenir les documents prévus à l’article 99 du Code général des impôts conformément à l’un des plans comptables professionnels agréés par le ministre de l’économie et des finances (nomenclature comptabledes professions libérales prévue par l’arrêté du 30 janvier 1978).</p>
  <p class="rteindent1">Pour les titulaires de revenus non commerciaux non professionnels, souscrire à l’engagement de la connaissance des revenus conformément à l’article 1649 quater F du Code général des impôts. De par cet engagement, je prends acte de mon obligation de souscrire des déclarations sincères et de suivre les recommandations qui me sont formulées par l’association.</p>
  <p class="rteindent1">Déclarer les résultats et leurs annexes selon la procédure de transfert des données fiscales et comptables (TDFC). Je m’engage, à ce titre, à donner mandat à l’association si je ne télétransmets pas la déclaration de résultats et ses annexes par mes propres moyens.</p>
  <p class="rteindent1">Communiquer à l’association les déclarations de résultats et leurs annexes, ainsi que toutes les autres déclarations, documents comptables et justificatifs sollicités dans le cadre des analyses et contrôles réalisés par l’association.</p>
  <p>Autorise l’association à utiliser mes données personnelles dans le strict cadre et pour la seule réalisation de l’activité d’organisme mixte de gestion agréé, en ce compris la transmission d’informations particulières et générales sur l’activité et l’actualité de l’association, et à utiliser et transmettre de manière purement anonyme mes données professionnelles aux fins de réalisation d’études statistiques ou économiques.</p>
  <p>Accuse réception de l’annexe au bulletin d’adhésion et de l’affiche qui l’accompagne relatifs à l’acceptation des paiements par chèque ou par carte bancaire.</p>
  <p><strong>En cas d\'adhésion en ligne, règle par carte bancaire la cotisation annuelle de l’association, condition de mon adhésion en ligne</strong>.</p>
  <h3>Informations diverses</h3>
  <h4>Extraits du BOFiP BOI-DJC-OA-20-10-20-10, n° 110</h4>
  <p>Dans le cadre de leur mission d\'accompagnement, les associations sensibilisent leurs adhérents au respect de leurs obligations fiscales de paiement. Si vous rencontrez des difficultés de paiement, vous êtes invité à contacter le service des impôts dont vous dépendez. En cas de difficultés particulières, et sur demande, une information complémentaire relative aux dispositifs d\'aide aux entreprises en difficulté est proposée par l\'association.</p>
  <h4>Extraits du BOFiP BOI-DJC-OA-20-30-10-10, n° 460</h4>
  <p>Selon la nature de leur activité exercée à l\'étranger, les titulaires de revenus professionnels de source étrangère imposables à l\'impôt sur le revenu en France, ou exonérés mais pris en compte pour le calcul du taux effectif, peuvent adhérer soit à un centre de gestion agréé, soit à une association agréée, sous réserve que ces revenus proviennent d\'un État membre de l\'Union Européenne, ou d\'un autre État partie à l\'accord sur l\'Espace économique européen ayant conclu avec la France une convention d\'assistance administrative en vue de lutter contre la fraude et l\'évasion fiscales.</p>
  <h4>Notes importantes</h4>
  <p>En cas de société d’exercice, un seul bulletin doit être établi au nom de la Société et une seule cotisation est due.<br>
  En cas d’exercice par un même contribuable d’activités relevant de régimes fiscaux différents (BIC, BA, BNC), une cotisation est due par activité exercée (même si un seul bulletin d’adhésion a été renseigné).<br>
  Pour les adhérents non assistés d’un professionnel, l\'association tient à préciser que si elle est obligée d\'intervenir pour la mise en ordre de leur dossier à la suite d\'un Contrôle de Cohérence et de Vraisemblance ayant révélé une mauvaise tenue des divers registres obligatoires, des honoraires seront réclamés à l\'Adhérent pour cette Intervention.<br>
  Conformément à la Loi Informatique et Libertés du 6 janvier 1978, vous disposez d\'un droit d\'accès et de rectification aux données personnelles vous concernant.</p>
  </div>';

  return array($msg, $benefice);
}

/**
 * Implements hook_mail().
 */
function feature_form_amapl_mail($key, &$message, $params) {
  switch ($key) {
    case 'form_amapl_paid':
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];
      break;
  }
}

/**
 * Implements hook_node_view().
 */
function feature_form_amapl_node_view($node, $view_mode, $langcode) {
  $alias = drupal_get_path_alias('node/' . $node->nid);
  if ($alias == 'paypal_payment_pps/return') {
    if (isset($_SESSION['paypal_payment_pps_pid'])) {
      $paymentpath = '/payment/' . $_SESSION['paypal_payment_pps_pid'] . '/view';
      /*drupal_goto('payment/' . $_SESSION['paypal_payment_pps_pid'] . '/view');*/
      // appel du js
      drupal_add_js(array('feature_form_amapl' => array('paymentpath' => $paymentpath)), array('type' => 'setting'));
      drupal_add_js(drupal_get_path('module', 'feature_form_amapl') . '/js/gotopayment.js');
    }
  }
}



